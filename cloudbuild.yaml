substitutions:
  _SERVICE_NAME: python-web-app
  _REGION: us-west1
  _AR_REPO: gke-repo
  
steps:
# 1. Build the Docker Image
# This forces the build to use the repository root ('.') for context 
# and explicitly defines the Dockerfile location (Microservices/Dockerfile).
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
    - 'build'
    - '-t'
    - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}'
    # CRITICAL FIX: Explicitly specify the path to the Dockerfile
    - '--file=Microservices/Dockerfile' 
    - '.' # The build context is the repository root (where the Microservices folder is located)

# 2. Push the built image to Google Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
    - 'push'
    - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}'

# 3. Deploy the new image revision to Cloud Run
- name: 'gcr.io/google.com/cloudsdk/cloud-sdk'
  id: Deploy
  args:
    - gcloud
    - run
    - deploy
    - ${_SERVICE_NAME}
    - --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}
    - --region=${_REGION}
    - --platform=managed
    - --allow-unauthenticated
    - --project=${PROJECT_ID}
  waitFor: ['Push']
  
images:
- '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}'
options:
  logging: CLOUD_LOGGING_ONLY